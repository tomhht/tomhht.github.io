<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://tomhht.github.io</id>
    <title>hello, world</title>
    <updated>2020-08-30T09:49:33.437Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://tomhht.github.io"/>
    <link rel="self" href="https://tomhht.github.io/atom.xml"/>
    <logo>https://tomhht.github.io/images/avatar.png</logo>
    <icon>https://tomhht.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, hello, world</rights>
    <entry>
        <title type="html"><![CDATA[在Ubuntu 20.04上使用kubeadm部署Kubernetes集群]]></title>
        <id>https://tomhht.github.io/post/zai-ubuntu-2004-shang-shi-yong-kubeadm-bu-shu-kubernetes-ji-qun/</id>
        <link href="https://tomhht.github.io/post/zai-ubuntu-2004-shang-shi-yong-kubeadm-bu-shu-kubernetes-ji-qun/">
        </link>
        <updated>2020-08-27T10:40:02.000Z</updated>
        <summary type="html"><![CDATA[<p>本文主要是踩坑后想记录下避坑方法，内容涉及Kubernetes, Kubeadm, Kubectl, Kubelet, Ubuntu, CentOS, Flannel, Docker, 阿里云。</p>
]]></summary>
        <content type="html"><![CDATA[<p>本文主要是踩坑后想记录下避坑方法，内容涉及Kubernetes, Kubeadm, Kubectl, Kubelet, Ubuntu, CentOS, Flannel, Docker, 阿里云。</p>
<!-- more -->
<h1 id="写作背景">写作背景</h1>
<p>初学Kubernetes，虽然网上资源很多，但没一个能彻底搞定，于是杂烩一下。</p>
<h1 id="安装前的准备工作">安装前的准备工作</h1>
<h2 id="创建k8s文件夹">创建k8s文件夹</h2>
<p>存放安装过程所需文件。执行下面代码：<br>
<code>mkdir ~/k8s</code></p>
<h2 id="设置iptables">设置iptables</h2>
<p>执行下面代码：</p>
<pre><code>cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system
</code></pre>
<h2 id="打开端口">打开端口</h2>
<p>先打开Ubuntu自带的防火墙ufw，因为ufw设置似乎更简单一些。执行下面代码：<br>
<code>sudo ufw enable</code><br>
执行后提示可能断开连接，直接y继续，别担心，ssh连接不会断。<br>
如果使用ssh连接，还需要执行下面代码，以便打开ssh连接：<br>
<code>sudo ufw allow ssh</code><br>
接下来分别设置：</p>
<ol>
<li>控制节点 Control-plane nodes</li>
</ol>
<pre><code>sudo ufw allow 6443/tcp
sudo ufw allow 2379:2380/tcp
sudo ufw allow 10250:10252/tcp
</code></pre>
<p>上面代码中的冒号代表端口区间，如10250:10252代表10250、10251、10252这3个端口一起设置。<br>
2. 工作节点 Worker nodes</p>
<pre><code>sudo ufw allow 10250/tcp
sudo ufw allow 30000:32767/tcp
</code></pre>
<h2 id="禁用swap">禁用swap</h2>
<p>由于swap性能低下，Kubeadm默认要求禁止使用swap。执行如下代码：</p>
<pre><code>sudo swapoff -a  #临时禁用swap
sudo sed -i 's/.*swap.*/#&amp;/' /etc/fstab  #永久禁用swap
</code></pre>
<p>可通过<code>free -m</code>来检查禁用效果。</p>
<h1 id="安装kubeadm-kubelet和kubectl">安装kubeadm, kubelet和kubectl</h1>
<pre><code>sudo apt-get update &amp;&amp; sudo apt-get install -y apt-transport-https curl
curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add -
cat &lt;&lt;EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://mirrors.aliyun.com/kubernetes/apt kubernetes-xenial main
EOF
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
</code></pre>
<h1 id="使用kubeadm部署">使用kubeadm部署</h1>
<p>由于种种原因，国内无法从k8s.gcr.io下载到kubeadm部署所需的文件，以下方法将通过阿里云获取。</p>
<h2 id="准备工作">准备工作</h2>
<h3 id="查看所需镜像">查看所需镜像</h3>
<pre><code>kubeadm config images list
#下面是执行后的结果
k8s.gcr.io/kube-apiserver:v1.18.8
k8s.gcr.io/kube-controller-manager:v1.18.8
k8s.gcr.io/kube-scheduler:v1.18.8
k8s.gcr.io/kube-proxy:v1.18.8
k8s.gcr.io/pause:3.2
k8s.gcr.io/etcd:3.4.3-0
k8s.gcr.io/coredns:1.6.7
</code></pre>
<h3 id="在阿里云控制台找到所需镜像">在阿里云控制台找到所需镜像</h3>
<ol>
<li>https://cr.console.aliyun.com/  左侧点”镜像搜索“</li>
<li>分别搜索”kube-apiserver“等所需镜像，点开搜索到的镜像，一定找到正确的版本号（如v1.18.8）（日期越新的越容易找到），复制页面中的”公网地址“</li>
</ol>
<h3 id="pull镜像-打标签-移除无用镜像">pull镜像、打标签、移除无用镜像</h3>
<ol>
<li>pull镜像</li>
</ol>
<pre><code>KUBE_VERSION=v1.18.8
PAUSE_VERSION=3.2
ETCD_VERSION=3.4.3-0
CORE_DNS_VERSION=1.6.7
docker pull registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-apiserver:$KUBE_VERSION
docker pull registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-controller-manager:$KUBE_VERSION
docker pull registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-scheduler:$KUBE_VERSION
docker pull registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-proxy:$KUBE_VERSION
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause:$PAUSE_VERSION
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:$CORE_DNS_VERSION
docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:$ETCD_VERSION
</code></pre>
<ol start="2">
<li>给pull下来的镜像打标签<br>
因为kubeadm部署时会找k8s.gcr.io标签的镜像，因此需要将上一步pull的镜像打上k8s.gcr.io标签。</li>
</ol>
<pre><code>docker tag registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-apiserver:$KUBE_VERSION  k8s.gcr.io/kube-proxy:$KUBE_VERSION
docker tag registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-apiserver:$KUBE_VERSION k8s.gcr.io/kube-controller-manager:$KUBE_VERSION
docker tag registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-apiserver:$KUBE_VERSION k8s.gcr.io/kube-apiserver:$KUBE_VERSION
docker tag registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-apiserver:$KUBE_VERSION k8s.gcr.io/kube-scheduler:$KUBE_VERSION
docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause:$PAUSE_VERSION k8s.gcr.io/pause:$PAUSE_VERSION
docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:$CORE_DNS_VERSION k8s.gcr.io/coredns:$CORE_DNS_VERSION
docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:$ETCD_VERSION k8s.gcr.io/etcd:$ETCD_VERSION
</code></pre>
<ol start="3">
<li>移除从阿里云pull下来的镜像</li>
</ol>
<pre><code>docker rmi registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-apiserver:$KUBE_VERSION
docker rmi registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-controller-manager:$KUBE_VERSION
docker rmi registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-scheduler:$KUBE_VERSION
docker rmi registry.cn-hangzhou.aliyuncs.com/wyc_google_containers/kube-proxy:$KUBE_VERSION
docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/pause:$PAUSE_VERSION
docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:$CORE_DNS_VERSION
docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:$ETCD_VERSION
</code></pre>
<h2 id="开始部署">开始部署</h2>
<pre><code>kubeadm init --apiserver-advertise-address=你的本机IP --pod-network-cidr=10.244.0.0/16  --kubernetes-version=v1.18.8
</code></pre>
<p>记录下<code>kubeadm join ...</code>内容，这是其他节点加入主节点master的信息。</p>
<h2 id="赋予当前用户使用kubectl的权限">赋予当前用户使用kubectl的权限</h2>
<pre><code>mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
</code></pre>
<h2 id="安装网络组件">安装网络组件</h2>
<h3 id="准备工作-2">准备工作</h3>
<p>由于种种原因，无法直接pull到网络组件flannel的docker镜像，因此需单独下载。<br>
https://github.com/coreos/flannel/releases/download/v0.12.0/flanneld-v0.12.0-amd64.docker<br>
下载后放进<code>~/k8s</code>，执行命令：</p>
<pre><code>cd ~/k8s
docker load &lt; flanneld-v0.12.0-amd64.docker
</code></pre>
<h3 id="开始安装">开始安装</h3>
<pre><code>wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
kubectl apply -f kube-flannel.yml
</code></pre>
<blockquote>
<p>以上为master节点的部署全流程。</p>
</blockquote>
<hr>
<p>未完待续...</p>
]]></content>
    </entry>
</feed>